---
name: Test dependency versions

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow_ref }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  guava:
    name: Test Guava versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-version: [ 33.3.1-jre, 33.2.1-jre ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - uses: actions/setup-java@v4
        name: setup build jdk
        id: build_jdk
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: build code
        id: install_fast
        env:
          MAVEN_ARGS: "-B -ff"
        run: |
          ./mvnw --version
          make install-fast

      - name: run tests
        id: run_tests
        env:
          MAVEN_ARGS: "-B -ff -pl :jdbi3-guava,:jdbi3-guice -Ddep.guava.version=${{ matrix.test-version }}"
        run: |
          ./mvnw --version
          make run-tests

      - uses: actions/upload-artifact@v4
        name: upload build logs
        id: upload_build_logs
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: build logs (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 90
          path: |
            **/target
            !**/target/**/*.jar
            !**/target/**/*.class

      - uses: actions/upload-artifact@v4
        name: upload build artifacts
        id: upload_build_artifacts
        continue-on-error: true
        with:
          name: build artifacts (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 1
          path: |
            **/target/**/*.jar

  immutables:
    name: Test Immutables versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-version: [ 2.10.1, 2.9.3 ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - uses: actions/setup-java@v4
        name: setup build jdk
        id: build_jdk
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: build code
        id: install_fast
        env:
          MAVEN_ARGS: "-B -ff"
        run: |
          ./mvnw --version
          make install-fast

      - name: run tests
        id: run_tests
        env:
          MAVEN_ARGS: "-B -ff -pl :jdbi3-core -Ddep.immutables.version=${{ matrix.test-version }}"
        run: |
          ./mvnw --version
          make run-tests

      - uses: actions/upload-artifact@v4
        name: upload build logs
        id: upload_build_logs
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: build logs (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 90
          path: |
            **/target
            !**/target/**/*.jar
            !**/target/**/*.class

      - uses: actions/upload-artifact@v4
        name: upload build artifacts
        id: upload_build_artifacts
        continue-on-error: true
        with:
          name: build artifacts (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 1
          path: |
            **/target/**/*.jar

  jackson2:
    name: Test Jackson Versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-version: [ 2.19.1, 2.17.3, 2.16.2 ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - uses: actions/setup-java@v4
        name: setup build jdk
        id: build_jdk
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: build code
        id: install_fast
        env:
          MAVEN_ARGS: "-B -ff"
        run: |
          ./mvnw --version
          make install-fast

      - name: run tests
        id: run_tests
        env:
          MAVEN_ARGS: "-B -ff -pl :jdbi3-jackson2 -Ddep.jackson2.version=${{ matrix.test-version }}"
        run: |
          ./mvnw --version
          make run-tests

      - uses: actions/upload-artifact@v4
        name: upload build logs
        id: upload_build_logs
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: build logs (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 90
          path: |
            **/target
            !**/target/**/*.jar
            !**/target/**/*.class

      - uses: actions/upload-artifact@v4
        name: upload build artifacts
        id: upload_build_artifacts
        continue-on-error: true
        with:
          name: build artifacts (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 1
          path: |
            **/target/**/*.jar

  jodatime2:
    name: Test joda-time versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-version: [ 2.13.1, 2.12.7 ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - uses: actions/setup-java@v4
        name: setup build jdk
        id: build_jdk
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: build code
        id: install_fast
        env:
          MAVEN_ARGS: "-B -ff"
        run: |
          ./mvnw --version
          make install-fast

      - name: run tests
        id: run_tests
        env:
          MAVEN_ARGS: "-B -ff -pl :jdbi3-jodatime2 -Ddep.joda-time.version=${{ matrix.test-version }}"
        run: |
          ./mvnw --version
          make run-tests

      - uses: actions/upload-artifact@v4
        name: upload build logs
        id: upload_build_logs
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: build logs (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 90
          path: |
            **/target
            !**/target/**/*.jar
            !**/target/**/*.class

      - uses: actions/upload-artifact@v4
        name: upload build artifacts
        id: upload_build_artifacts
        continue-on-error: true
        with:
          name: build artifacts (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 1
          path: |
            **/target/**/*.jar

  vavr:
    name: Test vavr versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-version: [ 0.9.3 ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - uses: actions/setup-java@v4
        name: setup build jdk
        id: build_jdk
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: build code
        id: install_fast
        env:
          MAVEN_ARGS: "-B -ff"
        run: |
          ./mvnw --version
          make install-fast

      - name: run tests
        id: run_tests
        env:
          MAVEN_ARGS: "-B -ff -pl :jdbi3-vavr -Ddep.vavr.version=${{ matrix.test-version }}"
        run: |
          ./mvnw --version
          make run-tests

      - uses: actions/upload-artifact@v4
        name: upload build logs
        id: upload_build_logs
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: build logs (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 90
          path: |
            **/target
            !**/target/**/*.jar
            !**/target/**/*.class

      - uses: actions/upload-artifact@v4
        name: upload build artifacts
        id: upload_build_artifacts
        continue-on-error: true
        with:
          name: build artifacts (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 1
          path: |
            **/target/**/*.jar

  guice:
    name: Test guice versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-version: [ 6.0.0, 7.0.0 ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - uses: actions/setup-java@v4
        name: setup build jdk
        id: build_jdk
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: build code
        id: install_fast
        env:
          MAVEN_ARGS: "-B -ff"
        run: |
          ./mvnw --version
          make install-fast

      - name: run tests
        id: run_tests
        env:
          MAVEN_ARGS: "-B -ff -pl :jdbi3-guice -Ddep.guice.version=${{ matrix.test-version }}"
        run: |
          ./mvnw --version
          make run-tests

      - uses: actions/upload-artifact@v4
        name: upload build logs
        id: upload_build_logs
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: build logs (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 90
          path: |
            **/target
            !**/target/**/*.jar
            !**/target/**/*.class

      - uses: actions/upload-artifact@v4
        name: upload build artifacts
        id: upload_build_artifacts
        continue-on-error: true
        with:
          name: build artifacts (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 1
          path: |
            **/target/**/*.jar

  kotlin:
    name: Test kotlin runtime versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-version: [ 2.1.21, 2.0.21, 1.9.25 ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - uses: actions/setup-java@v4
        name: setup build jdk
        id: build_jdk
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: build code
        id: install_fast
        env:
          MAVEN_ARGS: "-B -ff"
        run: |
          ./mvnw --version
          make install-fast

      - name: run tests
        id: run_tests
        env:
          MAVEN_ARGS: "-B -ff -pl :jdbi3-kotlin,:jdbi3-kotlin-sqlobject -Ddep.kotlin.version=${{ matrix.test-version }}"
        run: |
          ./mvnw --version
          make run-tests

      - uses: actions/upload-artifact@v4
        name: upload build logs
        id: upload_build_logs
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: build logs (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 90
          path: |
            **/target
            !**/target/**/*.jar
            !**/target/**/*.class

      - uses: actions/upload-artifact@v4
        name: upload build artifacts
        id: upload_build_artifacts
        continue-on-error: true
        with:
          name: build artifacts (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 1
          path: |
            **/target/**/*.jar

  spring:
    name: Test spring framework versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-version: [ 6.1.19 ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - uses: actions/setup-java@v4
        name: setup build jdk
        id: build_jdk
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: build code
        id: install_fast
        env:
          MAVEN_ARGS: "-B -ff"
        run: |
          ./mvnw --version
          make install-fast

      - name: run tests
        id: run_tests
        env:
          MAVEN_ARGS: "-B -ff -pl :jdbi3-spring -Ddep.spring.version=${{ matrix.test-version }}"
        run: |
          ./mvnw --version
          make run-tests

      - uses: actions/upload-artifact@v4
        name: upload build logs
        id: upload_build_logs
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: build logs (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 90
          path: |
            **/target
            !**/target/**/*.jar
            !**/target/**/*.class

      - uses: actions/upload-artifact@v4
        name: upload build artifacts
        id: upload_build_artifacts
        continue-on-error: true
        with:
          name: build artifacts (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 1
          path: |
            **/target/**/*.jar

  slf4j:
    name: Test slf4j versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-version: [ 2.1.0-alpha1, 1.7.36 ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - uses: actions/setup-java@v4
        name: setup build jdk
        id: build_jdk
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: build code
        id: install_fast
        env:
          MAVEN_ARGS: "-B -ff"
        run: |
          ./mvnw --version
          make install-fast

      - name: run tests
        id: run_tests
        env:
          MAVEN_ARGS: "-B -ff -Ddep.slf4j.version=${{ matrix.test-version }}"
        run: |
          ./mvnw --version
          make run-tests

      - uses: actions/upload-artifact@v4
        name: upload build logs
        id: upload_build_logs
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: build logs (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 90
          path: |
            **/target
            !**/target/**/*.jar
            !**/target/**/*.class

      - uses: actions/upload-artifact@v4
        name: upload build artifacts
        id: upload_build_artifacts
        continue-on-error: true
        with:
          name: build artifacts (${{ github.job }}, ${{ matrix.test-version }})
          retention-days: 1
          path: |
            **/target/**/*.jar
